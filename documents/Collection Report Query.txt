select duecoll.student_gr_no,duecoll.student_name,duecoll.className,duecoll.secName,sum(duecoll.dues) as dues,sum(duecoll.collected) as collected from 
(
select student_gr_no,student_name,className,secName,
sum(fees_uniform)+sum(fees_exam)+sum(fees_tution)+sum(fees_books)+sum(fees_copies)+sum(fees_others) as dues,0 as collected
from (select 'R' as type, s.student_gr_no, s.student_name, c.name as className,sec.name as secName, ar.created_on, sum(ar.fees_admission * case when ar.is_correction = 0 then -1 else 1 end) as fees_admission, 
sum(ar.fees_exam* case when ar.is_correction = 0 then -1 else 1 end) as fees_exam, 
sum(ar.fees_tution* case when ar.is_correction = 0 then -1 else 1 end) as fees_tution, 
sum(ar.fees_books* case when ar.is_correction = 0 then -1 else 1 end) as fees_books, 
sum(ar.fees_copies* case when ar.is_correction = 0 then -1 else 1 end) as fees_copies, 
sum(ar.fees_uniform* case when ar.is_correction = 0 then -1 else 1 end) as fees_uniform, 
sum(ar.fees_others* case when ar.is_correction = 0 then -1 else 1 end) as fees_others  
from AppReceipt ar 
inner join school_class sc on sc.id = ar.schoolclass_id and sc.school_id = 1112
inner join class c on c.id = sc.class_id 
inner join section sec on sec.id = sc.section_id 
inner join student s on s.id =ar.student_id
group by s.student_gr_no
union 
select 'R' as type,s.student_gr_no,s.student_name,c.name as className,sec.name as secName, ai.created_on, sum(ai.fees_admission * case when ai.created_from = 'W' or ai.created_from = 'B' then -1 else 1 end) as fees_admission, 
sum(ai.fees_exam * case when ai.created_from = 'W' or ai.created_from = 'B' then -1 else 1 end) as fees_exam, 
sum(ai.fees_tution * case when ai.created_from = 'W' or ai.created_from = 'B' then -1 else 1 end) as fees_tution, 
sum(ai.fees_books * case when ai.created_from = 'W' or ai.created_from = 'B' or ai.created_from = 'S' then -1 else 1 end) as fees_books, 
sum(ai.fees_copies * case when ai.created_from = 'W' or ai.created_from = 'B' or ai.created_from = 'S' then -1 else 1 end) as fees_copies,
sum(ai.fees_uniform * case when ai.created_from = 'W' or ai.created_from = 'B' or ai.created_from = 'S' then -1 else 1 end) as fees_uniform, 
sum(ai.fees_others * case when ai.created_from = 'W' or ai.created_from = 'B' or ai.created_from = 'S' then -1 else 1 end) as fees_others 
from AppInvoice ai 
inner join school_class sc on sc.id = ai.schoolclass_id and sc.school_id = 1112
inner join class c on c.id = sc.class_id 
 inner join section sec on sec.id = sc.section_id  
inner join student s on s.id =ai.student_id
group by s.student_gr_no
) 
group by student_gr_no
union 
select s.student_gr_no, s.student_name, c.name as className,sec.name as secName, 0 as dues, (sum(ar.fees_admission * case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_exam* case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_tution* case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_books* case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_copies* case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_uniform* case when ar.is_correction = 0 then -1 else 1 end)+ 
sum(ar.fees_others* case when ar.is_correction = 0 then -1 else 1 end)) as collected
from AppReceipt ar 
inner join school_class sc on sc.id = ar.schoolclass_id and sc.school_id = 1112
inner join class c on c.id = sc.class_id 
inner join section sec on sec.id = sc.section_id 
inner join student s on s.id =ar.student_id
group by s.student_gr_no
) 
duecoll
group by duecoll.student_gr_no
order by cast(student_gr_no as integer) 
